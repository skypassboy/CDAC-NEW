package threadcomm;

public class Stock {
	private int qtyProduced;
	int qtyConsumed;
	boolean bProduced;  //true-consumer, false-producer 
	
	public Stock()
	{
		qtyProduced = qtyConsumed = 0;
		bProduced = false;
	}
	
	public void produce()
	{
		//some qty is already present
		if(bProduced)
		{
			try {
				this.wait();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
		qtyProduced++;
		System.out.println("Produced : "+qtyProduced);
		
	}
	
	public void consume()
	{
		qtyConsumed++;
		System.out.println("Consumed : "+qtyConsumed);
		
	}

	public int getQtyProduced() {
		return qtyProduced;
	}

	/*public boolean isbProduced() {
		return bProduced;
	}*/
	
	
	
	

}
